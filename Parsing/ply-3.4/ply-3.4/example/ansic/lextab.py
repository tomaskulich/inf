# lextab.py. This file automatically created by PLY (version 3.4). Don't edit!
_tabversion   = '3.4'
_lextokens    = {'RPAREN': 1, 'MINUS': 1, 'UNION': 1, 'OR': 1, 'STATIC': 1, 'RSHIFTEQUAL': 1, 'BREAK': 1, 'FLOAT': 1, 'LAND': 1, 'LPAREN': 1, 'DOUBLE': 1, 'TIMESEQUAL': 1, 'NOT': 1, 'RETURN': 1, 'COMMA': 1, 'SIGNED': 1, 'FCONST': 1, 'PLUSEQUAL': 1, 'LOR': 1, 'EXTERN': 1, 'DIVEQUAL': 1, 'GE': 1, 'TYPEID': 1, 'LBRACE': 1, 'LONG': 1, 'EQ': 1, 'TIMES': 1, 'SIZEOF': 1, 'STRUCT': 1, 'CHAR': 1, 'SWITCH': 1, 'CASE': 1, 'MODEQUAL': 1, 'PLUSPLUS': 1, 'RBRACE': 1, 'SHORT': 1, 'REGISTER': 1, 'MINUSEQUAL': 1, 'VOLATILE': 1, 'OREQUAL': 1, 'MOD': 1, 'DEFAULT': 1, 'DO': 1, 'EQUALS': 1, 'PERIOD': 1, 'ELLIPSIS': 1, 'ARROW': 1, 'ELSE': 1, 'ICONST': 1, 'XOREQUAL': 1, 'ENUM': 1, 'LT': 1, 'PLUS': 1, 'CONDOP': 1, 'RBRACKET': 1, 'NE': 1, 'SCONST': 1, 'SEMI': 1, 'DIVIDE': 1, 'INT': 1, 'LE': 1, 'MINUSMINUS': 1, 'ID': 1, 'FOR': 1, 'IF': 1, 'XOR': 1, 'WHILE': 1, 'LSHIFT': 1, 'LSHIFTEQUAL': 1, 'GOTO': 1, 'CONST': 1, 'CCONST': 1, 'COLON': 1, 'RSHIFT': 1, 'UNSIGNED': 1, 'AND': 1, 'AUTO': 1, 'LNOT': 1, 'CONTINUE': 1, 'ANDEQUAL': 1, 'TYPEDEF': 1, 'GT': 1, 'VOID': 1, 'LBRACKET': 1}
_lexreflags   = 0
_lexliterals  = ''
_lexstateinfo = {'INITIAL': 'inclusive'}
_lexstatere   = {'INITIAL': [('(?P<t_NEWLINE>\\n+)|(?P<t_ID>[A-Za-z_][\\w_]*)|(?P<t_comment>/\\*(.|\\n)*?\\*/)|(?P<t_preprocessor>\\#(.)*?\\n)|(?P<t_FCONST>((\\d+)(\\.\\d+)(e(\\+|-)?(\\d+))? | (\\d+)e(\\+|-)?(\\d+))([lL]|[fF])?)|(?P<t_ICONST>\\d+([uU]|[lL]|[uU][lL]|[lL][uU])?)|(?P<t_CCONST>(L)?\\\'([^\\\\\\n]|(\\\\.))*?\\\')|(?P<t_SCONST>\\"([^\\\\\\n]|(\\\\.))*?\\")|(?P<t_ELLIPSIS>\\.\\.\\.)|(?P<t_LOR>\\|\\|)|(?P<t_PLUSPLUS>\\+\\+)|(?P<t_TIMESEQUAL>\\*=)|(?P<t_PLUSEQUAL>\\+=)|(?P<t_RSHIFTEQUAL>>>=)|(?P<t_OREQUAL>\\|=)|(?P<t_LSHIFTEQUAL><<=)|(?P<t_NE>!=)|(?P<t_MODEQUAL>%=)|(?P<t_MINUSMINUS>--)|(?P<t_GE>>=)|(?P<t_OR>\\|)|(?P<t_RBRACKET>\\])|(?P<t_XOREQUAL>^=)|(?P<t_LBRACE>\\{)|(?P<t_XOR>\\^)|(?P<t_PLUS>\\+)|(?P<t_RPAREN>\\))|(?P<t_LE><=)|(?P<t_LAND>&&)|(?P<t_EQ>==)|(?P<t_LPAREN>\\()|(?P<t_RBRACE>\\})|(?P<t_PERIOD>\\.)|(?P<t_ANDEQUAL>&=)|(?P<t_CONDOP>\\?)|(?P<t_LSHIFT><<)|(?P<t_ARROW>->)|(?P<t_LBRACKET>\\[)|(?P<t_MINUSEQUAL>-=)|(?P<t_TIMES>\\*)|(?P<t_RSHIFT>>>)|(?P<t_DIVEQUAL>/=)|(?P<t_NOT>~)|(?P<t_AND>&)|(?P<t_DIVIDE>/)|(?P<t_GT>>)|(?P<t_LT><)|(?P<t_EQUALS>=)|(?P<t_MOD>%)|(?P<t_SEMI>;)|(?P<t_MINUS>-)|(?P<t_COMMA>,)|(?P<t_COLON>:)|(?P<t_LNOT>!)', [None, ('t_NEWLINE', 'NEWLINE'), ('t_ID', 'ID'), ('t_comment', 'comment'), None, ('t_preprocessor', 'preprocessor'), None, (None, 'FCONST'), None, None, None, None, None, None, None, None, None, None, (None, 'ICONST'), None, (None, 'CCONST'), None, None, None, (None, 'SCONST'), None, None, (None, 'ELLIPSIS'), (None, 'LOR'), (None, 'PLUSPLUS'), (None, 'TIMESEQUAL'), (None, 'PLUSEQUAL'), (None, 'RSHIFTEQUAL'), (None, 'OREQUAL'), (None, 'LSHIFTEQUAL'), (None, 'NE'), (None, 'MODEQUAL'), (None, 'MINUSMINUS'), (None, 'GE'), (None, 'OR'), (None, 'RBRACKET'), (None, 'XOREQUAL'), (None, 'LBRACE'), (None, 'XOR'), (None, 'PLUS'), (None, 'RPAREN'), (None, 'LE'), (None, 'LAND'), (None, 'EQ'), (None, 'LPAREN'), (None, 'RBRACE'), (None, 'PERIOD'), (None, 'ANDEQUAL'), (None, 'CONDOP'), (None, 'LSHIFT'), (None, 'ARROW'), (None, 'LBRACKET'), (None, 'MINUSEQUAL'), (None, 'TIMES'), (None, 'RSHIFT'), (None, 'DIVEQUAL'), (None, 'NOT'), (None, 'AND'), (None, 'DIVIDE'), (None, 'GT'), (None, 'LT'), (None, 'EQUALS'), (None, 'MOD'), (None, 'SEMI'), (None, 'MINUS'), (None, 'COMMA'), (None, 'COLON'), (None, 'LNOT')])]}
_lexstateignore = {'INITIAL': ' \t\x0c'}
_lexstateerrorf = {'INITIAL': 't_error'}
